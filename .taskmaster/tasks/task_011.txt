# Task ID: 11
# Title: Define & Implement BookmarkLabel Data Model
# Status: done
# Dependencies: 9, 10
# Priority: high
# Description: Create the database schema and ORM definitions for the Many-to-Many relationship between Bookmarks and Labels.
# Details:
Define `BookmarkLabel` table with `id`, `bookmarkId`, `labelId`, `createdAt`, `updatedAt` fields. Implement Drizzle schema and migrations.

# Test Strategy:
Write unit tests for ORM operations (linking/unlinking bookmarks and labels).

# Subtasks:
## 1. Define BookmarkLabel Join Table Schema [done]
### Dependencies: None
### Description: Create the Drizzle schema for the `bookmarks_to_labels` join table. This table will include foreign keys referencing the `bookmarks` and `labels` tables to establish the many-to-many relationship.
### Details:
The schema should define columns for `bookmarkId` and `labelId`, along with a composite primary key. It should also include `createdAt` and `updatedAt` timestamps. Foreign key constraints with `onDelete: 'cascade'` should be configured.

## 2. Update Bookmark and Label Schemas for Relations [done]
### Dependencies: 11.1
### Description: Update the existing `Bookmark` and `Label` Drizzle schemas to define the many-to-many relationship using the newly created `bookmarks_to_labels` join table.
### Details:
Use Drizzle's `relations` helper to define the relationship on both the `bookmarks` and `labels` schemas. This will enable querying a bookmark's labels and a label's bookmarks through the ORM.

## 3. Generate and Apply Database Migration [done]
### Dependencies: 11.2
### Description: Use Drizzle Kit to generate a new SQL migration file based on the schema changes. Review the generated migration and apply it to the development database.
### Details:
Run the `drizzle-kit generate` command to create the migration script. Verify the SQL statements for creating the join table, foreign keys, and any necessary indexes. Apply the migration to the database.

## 4. Write Unit Tests for Bookmark-Label Relationship [done]
### Dependencies: 11.3
### Description: Write unit tests to verify that a label can be correctly added to and removed from a bookmark, and that queries for related items work as expected.
### Details:
Create test cases that: 1. Create a bookmark and a label. 2. Associate the label with the bookmark. 3. Verify the association by querying the bookmark's labels. 4. Remove the association. 5. Verify the label has been removed from the bookmark.

